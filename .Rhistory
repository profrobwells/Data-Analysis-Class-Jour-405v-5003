new = c('id', 'id2', 'geography', 'households_estimate_total','less10_000','10k_to_14_999', '15k_to_24_999',
'25k_to_34_999', '35k_to_49_999', '50k_to_74_999', '75k_to_99_999', '100k_to_149_999'. '150k_to_199_999','200k_plus','median_income', 'mean_income', 'pct_allocated_household_income','pct_allocated_family_income','pct_allocated_nonfamily_income'))
setnames(ArkCo_Income_2017, old = c('id', 'id2', 'geography', 'households_estimate_total',
'households_estimate_less_than_10_000', 'households_estimate_10_000_to_14_999',
'households_estimate_15_000_to_24_999', 'households_estimate_25_000_to_34_999',
'households_estimate_35_000_to_49_999', 'households_estimate_50_000_to_74_999',
'households_estimate_75_000_to_99_999', 'households_estimate_100_000_to_149_999',
'households_estimate_150_000_to_199_999', 'households_estimate_200_000_or_more',
'households_estimate_median_income_dollars', 'households_estimate_mean_income_dollars',
'households_estimate_percent_allocated_household_income_in_the_past_12_months',
'households_estimate_percent_allocated_family_income_in_the_past_12_months',
'households_estimate_percent_allocated_nonfamily_income_in_the_past_12_months'),
new = c('id','id2','geography','households_estimate_total','less10_000','10k_to_14_999','15k_to_24_999',
'25k_to_34_999', '35k_to_49_999','50k_to_74_999','75k_to_99_999','100k_to_149_999',
'150k_to_199_999','200k_plus','median_income','mean_income',
'pct_allocated_household_income','pct_allocated_family_income','pct_allocated_nonfamily_income'))
0
# Still need to fix column names
colnames(ArkCo_Income_2017)
View(ArkCo_Income_2017)
#Basic demo
demo(topic="graphics")
x <- stats::rnorm(50)
opar <- par(bg = "white")
plot(x, ann = FALSE, type = "n")
abline(h = 0, col = gray(.90))
lines(x, col = "green4", lty = "dotted")
points(x, bg = "limegreen", pch = 21)
title(main = "Simple Use of Color In a Plot",
+       xlab = "Just a Whisper of a Label",
+       col.main = "blue", col.lab = gray(.8),
+       cex.main = 1.2, cex.lab = 1.0, font.main = 4, font.lab = 3)
pie.sales <- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)
names(pie.sales) <- c("Blueberry", "Cherry",
+ 		      "Apple", "Boston Cream", "Other", "Vanilla Cream")
pie(pie.sales,
+     col = c("purple","violetred1","green3","cornsilk","cyan","white"))
title(main = "January Pie Sales", cex.main = 1.8, font.main = 1)
title(xlab = "(Don't try this at home kids)", cex.lab = 0.8, font.lab = 3)
pie.sales <- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)
names(pie.sales) <- c("Blueberry", "Cherry",
+ 		      "Apple", "Boston Cream", "Other", "Vanilla Cream")
pie(pie.sales,
+     col = c("purple","violetred1","green3","cornsilk","cyan","white"))
title(main = "January Pie Sales", cex.main = 1.8, font.main = 1)
title(xlab = "(Don't try this at home kids)", cex.lab = 0.8, font.lab = 3)
pie(pie.sales,
+     col = c("purple","violetred1","green3","cornsilk","cyan","white"))
pie(pie.sales,+ col = c("purple","violetred1","green3","cornsilk","cyan","white"))
title(main = "January Pie Sales", cex.main = 1.8, font.main = 1)
title(xlab = "(Don't try this at home kids)", cex.lab = 0.8, font.lab = 3)
pie(rep(1,24), col = rainbow(24), radius = 0.9)
title(xlab = "(Use this as a test of monitor linearity)",
+       cex.lab = 0.8, font.lab = 3)
pie.sales <- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)
names(pie.sales) <- c("Blueberry", "Cherry",
+ 		      "Apple", "Boston Cream", "Other", "Vanilla Cream")
pie(pie.sales,+ col = c("purple","violetred1","green3","cornsilk","cyan","white"))
title(main = "January Pie Sales", cex.main = 1.8, font.main = 1)
title(xlab = "(Don't try this at home kids)", cex.lab = 0.8, font.lab = 3)
#Tutorial
snowdata <- rio::import("data/BostonChicagoNYCSnowfalls.csv")
View(snowdata)
View(snowdata)
bostonsnow <- select(snowdata, Winter, Boston)
pacman::p_load(ggplot2, dplyr, usethis, forcats)
bostonsnow <- select(snowdata, Winter, Boston)
View(bostonsnow)
View(bostonsnow)
names(bostonsnow)[2] <- "TotalSnow"
View(bostonsnow)
bostonsnow <- select(snowdata, Winter, Boston) %>%
rename(TotalSnow = Boston)
View(bostonsnow)
bostonsnow <- select(snowdata, Winter, TotalSnow = Boston)
#Basic graphs
plot(bostonsnow$TotalSnow)
#Load Data
ArkCo_Income_2017 <- rio::import("Data/ArkCo_Income_2017.csv")
#Install tibble for the glimpse function
library (tibble)
ArkCo_Income2_2017_copy <- rio::import("Data/ArkCo_Income2_2017_copy.csv", skip=1)
#Clean Headers - Janitor package
library(janitor)
ArkCo_Income_2017 <- janitor::clean_names(ArkCo_Income_2017)
View(ArkCo_Income_2017)
#New Names
library(data.table)
setnames(ArkCo_Income_2017, old = c('id', 'id2', 'geography', 'households_estimate_total',
'households_estimate_less_than_10_000', 'households_estimate_10_000_to_14_999',
'households_estimate_15_000_to_24_999', 'households_estimate_25_000_to_34_999',
'households_estimate_35_000_to_49_999', 'households_estimate_50_000_to_74_999',
'households_estimate_75_000_to_99_999', 'households_estimate_100_000_to_149_999',
'households_estimate_150_000_to_199_999', 'households_estimate_200_000_or_more',
'households_estimate_median_income_dollars', 'households_estimate_mean_income_dollars',
'households_estimate_percent_allocated_household_income_in_the_past_12_months',
'households_estimate_percent_allocated_family_income_in_the_past_12_months',
'households_estimate_percent_allocated_nonfamily_income_in_the_past_12_months'),
new = c('id','id2','geography','households_estimate_total','less10_000','10k_to_14_999','15k_to_24_999',
'25k_to_34_999', '35k_to_49_999','50k_to_74_999','75k_to_99_999','100k_to_149_999',
'150k_to_199_999','200k_plus','median_income','mean_income',
'pct_allocated_household_income','pct_allocated_family_income','pct_allocated_nonfamily_income'))
View(ArkCo_Income_2017)
ArkCo_Income_2017 <- rio::import("Data/ArkCo_Income_2017.csv", skip=1)
# Clean up column names to they are R friendly
ArkCo_Income_2017 <- janitor::clean_names(ArkCo_Income_2017)
View(ArkCo_Income_2017)
# Still need to fix column names
colnames(ArkCo_Income_2017)
setnames(ArkCo_Income_2017, old = c('id', 'id2', 'geography', 'households_estimate_total',
'households_estimate_less_than_10_000', 'households_estimate_10_000_to_14_999',
'households_estimate_15_000_to_24_999', 'households_estimate_25_000_to_34_999',
'households_estimate_35_000_to_49_999', 'households_estimate_50_000_to_74_999',
'households_estimate_75_000_to_99_999', 'households_estimate_100_000_to_149_999',
'households_estimate_150_000_to_199_999', 'households_estimate_200_000_or_more',
'households_estimate_median_income_dollars', 'households_estimate_mean_income_dollars',
'households_estimate_percent_allocated_household_income_in_the_past_12_months',
'households_estimate_percent_allocated_family_income_in_the_past_12_months',
'households_estimate_percent_allocated_nonfamily_income_in_the_past_12_months'),
new = c('id','id2','geography','households_estimate_total','less10_000','10k_to_14_999','15k_to_24_999',
'25k_to_34_999', '35k_to_49_999','50k_to_74_999','75k_to_99_999','100k_to_149_999',
'150k_to_199_999','200k_plus','median_income','mean_income',
'pct_allocated_household_income','pct_allocated_family_income','pct_allocated_nonfamily_income'))
View(ArkCo_Income_2017)
#Quick Data Viz
#Basic graphs
plot(ArkCo_Income_2017$median_income)
hist(ArkCo_Income_2017$median_income)
boxplot(ArkCo_Income_2017$median_income)
barplot(ArkCo_Income_2017$median_income)
barplot(sort(ArkCo_Income_2017$median_income, decreasing = TRUE))
#qplot
qplot(data=bostonsnow, y = TotalSnow)
qplot(y = bostonsnow$TotalSnow)
#bring in snowdata tidy
snowdata_tidy <- rio::import("data/snowdata_tidy.csv")
View(snowdata_tidy)
ggplot(snowdata_tidy, aes(x = Winter, y = TotalSnow, group = City, color = City)) +
geom_line() +
geom_point()
#Import using Rio. Make sure ArkCensus is in your working directory!
ArkCensus <- rio::import("ArkCensus.csv")
#Load table - ArkCensus.csv -
download.file("https://bit.ly/2FxLJHj", "ArkCensus.csv")
#Import using Rio. Make sure ArkCensus is in your working directory!
ArkCensus <- rio::import("ArkCensus.csv")
i
# Clean up column names to they are R friendly
ArkCensus <- janitor::clean_names(ArkCensus)
# another method Rename a specific column
colnames(ArkCensus)[5] <- "BaseEstimate"
ArkCensus$Pct2017 <- ((ArkCensus$x2017-ArkCensus$x2016)/(ArkCensus$x2016))
library(formattable)
ArkCensus$Pct2017 <- percent(ArkCensus$Pct2017)
View(ArkCensus)
ArkCensus <- ArkCensus[order(-ArkCensus$Pct2017),]
# the Upper Quantile is 0.74% to 2.94%
TopGrowth <- ArkCensus%>%select(county, Pct2017)%>%filter(Pct2017 > 0.0074)
library(ggplot2)
TopGrowthChart <- ggplot(TopGrowth, aes(x = county, y=Pct2017)) +
geom_bar(stat = "identity") +
coord_flip() +     #this makes it a horizontal bar chart instead of vertical
labs(title = "Your title here",
subtitle = "Subtitle and source ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = county, y=Pct2017, color = Pct2017)) +
geom_bar(stat = "identity") +
coord_flip() +     #this makes it a horizontal bar chart instead of vertical
labs(title = "Your title here",
subtitle = "Subtitle and source ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = county, y=Pct2017, color = county)) +
geom_bar(stat = "identity") +
coord_flip() +     #this makes it a horizontal bar chart instead of vertical
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = county, y=Pct2017, color = Pct2017)) +
geom_bar(stat = "identity") +
coord_flip() +     #this makes it a horizontal bar chart instead of vertical
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = county, y=fct_reorder(county, PCT2017, desc=TRUE), color = Pct2017)) +
geom_bar(stat = "identity") +
coord_flip() +     #this makes it a horizontal bar chart instead of vertical
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = county, y=fct_reorder(county, Pct2017, desc=TRUE), color = Pct2017)) +
geom_bar(stat = "identity") +
coord_flip() +     #this makes it a horizontal bar chart instead of vertical
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = county, y=fct_reorder(county, Pct2017, desc=TRUE))) +
geom_bar(stat = "identity") +
coord_flip() +     #this makes it a horizontal bar chart instead of vertical
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = county, y=fct_reorder(Pct2017, county, desc=TRUE))) +
geom_bar(stat = "identity") +
coord_flip() +     #this makes it a horizontal bar chart instead of vertical
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = county, y=Pct2017, desc=TRUE)) +
geom_bar(stat = "identity") +
coord_flip() +     #this makes it a horizontal bar chart instead of vertical
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017))  +                       +
geom_bar(stat = "identity") +
coord_flip() +     #this makes it a horizontal bar chart instead of vertical
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = reorder(county, -Pct2017), y = -Pct2017))  +                       +
geom_bar(stat = "identity") +
coord_flip() +     #this makes it a horizontal bar chart instead of vertical
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017))  +                       +
geom_bar(stat = "identity")
TopGrowthChart <- ggplot(TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017))  +                       +
geom_bar(stat = "identity")
TopGrowthChart <- ggplot(TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017))  +                       +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
glimpse(TopGrowth)
ArkCensus$Pct2017a <- ((ArkCensus$x2017-ArkCensus$x2016)/(ArkCensus$x2016))
# the Upper Quantile is 0.74% to 2.94%
TopGrowtha <- ArkCensus%>%select(county, Pct2017a)%>%filter(Pct2017a > 0.0074)
TopGrowthChart <- ggplot(TopGrowtha, aes(x = reorder(county, -Pct2017a), y = Pct2017a))  +                       +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
glimpse(TopGrowtha)
TopGrowth$county <- factor(TopGrowth$county, levels = TopGrowth$county[order(-TopGrowth$Pct2017)]
)
TopGrowthChart <- ggplot(TopGrowtha, aes(x = reorder(county, -Pct2017a), y = Pct2017a))  +                       +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = county, y=Pct2017))  +                       +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowth$county <- factor(TopGrowth$county, levels = TopGrowth$county[order(-TopGrowth$Pct2017)])
TopGrowthChart <- ggplot(TopGrowth, aes(x = county, y=Pct2017))  +                       +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth=TopGrowth, aes(x = county, y=Pct2017))  +                       +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth=TopGrowth, aes(x=county, y=Pct2017))  +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowth$county <- factor(TopGrowth$county, levels = TopGrowth$county[order(-TopGrowth$Pct2017)])
TopGrowthChart <- ggplot(TopGrowth=TopGrowth, aes(x=county, y=Pct2017))  +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth=TopGrowth, aes(x=Pct2017 y=county))  +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth=TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017))  +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth=TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017))  +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth=TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017))  +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017))  +
geom_bar(stat = "identity") +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017))  +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017 - https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US05.05000 ",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017))  +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017: https://factfinder.census.gov",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017), color_bar("pink"))  +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017: https://factfinder.census.gov",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017, color = Pct2017))  +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017: https://factfinder.census.gov",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
TopGrowthChart <- ggplot(TopGrowth, aes(x = reorder(county, -Pct2017), y = Pct2017))  +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top Growing Counties in Arkansas",
subtitle = "U.S. Census Data, 2017: https://factfinder.census.gov",
caption = "Graphic by Rob Wells",
x="County",
y="Population growth 2016-2017")
plot(TopGrowthChart)
setwd("~/Dropbox/Classes/Materials for Data Analysis Spring 2019 Jour 405v Jour 5003/Collins Twitter")
library(tidyverse)
#for importing csv file
library(readr)
#for analysis
library(dplyr)
#for creating charts
library(ggplot2)
#for working with dates
library(lubridate)
#themes for data viz
library(ggthemes)
#Install procedure
install.packages("twitteR")
library(purrr)
library(twitteR)
## install rtweet from CRAN
install.packages("rtweet")
## load rtweet
library(rtweet)
#load stringr to analyze text strings
install.packages("stringr")
#text analysis package
install.packages("tidytext")
library(tidytext)
install.packages("stringr")
Collins2 <- read_csv("collins2.csv")
View(Collins2)
Collins_URLS <- read_csv("Collins_URLS.csv")
Trump_Collins <- read.csv("Trump_Collins.csv")
Collins_URL_Detail <- read_csv("Collins_URL_Detail.csv")
reg <- "([^A-Za-z\\d#@']|'(?![A-Za-z\\d#@]))"
tweet_words <- Collins2 %>%
filter(!str_detect(text, '^"')) %>%
mutate(text = str_replace_all(text, "https://t.co/[A-Za-z\\d]+|&amp;", "")) %>%
unnest_tokens(word, text, token = "regex", pattern = reg) %>%
filter(!word %in% stop_words$word,
str_detect(word, "[a-z]"))
View(tweet_words)
CommonCollinsWords <- tweet_words %>%
count(word, source) %>%
filter(sum(n) >= 5) %>%
spread(source, n, fill = 0) %>%
ungroup()
View(CommonCollinsWords)
CommonCollinsWords <- tweet_words %>%
count(word) %>%
filter(sum(n) >= 5) %>%
ungroup()
View(CommonCollinsWords)
nrc <- sentiments %>%
filter(lexicon == "nrc") %>%
dplyr::select(word, sentiment)
View(nrc)
screen_name <- tweet_words %>%
group_by(screen_name) %>%
mutate(total_words = n()) %>%
ungroup() %>%
distinct(user_id, screen_name, total_words)
View(screen_name)
sentiment_words <- tweet_words %>%
count(word) %>%
inner_join(nrc, by = "word") %>%
select(word, sentiment, n) %>%
arrange(desc(n))
View(sentiment_words)
total_sentiment <- tweet_words %>%
inner_join(nrc, by = "word") %>%
count(sentiment, user_id) %>%
ungroup() %>%
complete(sentiment, user_id, fill = list(n = 0)) %>%
inner_join(screen_name) %>%
group_by(screen_name, sentiment, total_words) %>%
summarize(words = sum(n)) %>%
arrange(desc(words)) %>%
ungroup()
View(total_sentiment)
library(broom)
sentiment_differences <- total_sentiment %>%
group_by(sentiment) %>%
do(tidy(poisson.test(.$words, .$total_words)))
sentiment_differences
library(forcats)
ggplot(total_sentiment,
aes(x=words, y=fct_reorder(sentiment, words, desc=TRUE))) +
geom_point() +
labs(x="Count of Words in Twitter Feed", y="Words",
title = "Sentiment In Collins Twitter April-August 2018",
subtitle = "Draft Data, Oct 13, 2018",
caption = "Data analysis by Rob Wells") +
theme_wsj() +
geom_text(aes(label=words), hjust=-.4)
